### {{ ansible_managed }}

global:
  # How frequently to scrape targets by default.
  scrape_interval:     {{ prometheus_global_scrape_interval }}

  # How long until a scrape request times out.
  scrape_timeout: {{ prometheus_global_scrape_timeout }}

  # How frequently to evaluate rules.
  evaluation_interval: {{ prometheus_global_evaluation_interval }}

# A list of scrape configurations.
# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
{% for prom_job in prometheus_scrape_configs %}
  - job_name: '{{ prom_job.job_name }}'
    static_configs:
{% for prom_targets in prom_job.static_configs.targets %}
      - targets:
{% for host in prom_targets.hosts %}
        - '{{ lookup('community.general.dig', host.hostname) }}{{ ':'+host.port if host.port is defined and host.port != "" }}'
{% endfor %}
{% if (prom_targets.labels is defined) and prom_targets.labels %}
        labels:
{% for label_key,label_item in prom_targets.labels.items() %}
           {{ label_key }}: '{{ label_item }}'
{% endfor %}
{% endif %}
{% endfor %}
    metrics_path: "{{ prom_job.metrics_path }}"
{% if (prom_job.basic_auth is defined) and prom_job.basic_auth %}
    basic_auth:
{% for basic_auth_key,basic_auth_value in prom_job.basic_auth.items() %}
      {{ basic_auth_key }}: {{ basic_auth_value }}
{% endfor %}
{% endif %}
{% if (prom_job.params is defined) and prom_job.params %}
    params:
{% for param_key,param_value in prom_job.params.items() %}
      {{ param_key }}: {{ param_value }}
{% endfor %}
{% endif %}
{% if (prom_job.scrape_interval is defined) and (prom_job.scrape_interval != "") %}
    scrape_interval: "{{ prom_job.scrape_interval }}"
{% endif %}
{% if (prom_job.scrape_timeout is defined) and (prom_job.scrape_timeout != "") %}
    scrape_timeout: "{{ prom_job.scrape_timeout }}"
{% endif %}
{% if (prom_job.relabel_configs is defined) and prom_job.relabel_configs %}
    relabel_configs:
{% for relabel_config in prom_job.relabel_configs %}
      -
{% for relabel_config_key,relabel_config_value in relabel_config.items() %}
        {{ relabel_config_key }}: {{ relabel_config_value }}
{% endfor %}
{% endfor %}
{% endif %}

{% endfor %}

rule_files:
{% if prometheus_rule_files[0] is defined and prometheus_rule_files[0] != "" %}
{% for file in prometheus_rule_files %}
  - {{ file }}
{% endfor %}
{% endif %}

# Alerting specifies settings related to the Alertmanager.
alerting:
  alert_relabel_configs:
  alertmanagers:
