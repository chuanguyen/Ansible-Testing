prometheus_container_data_dir: "{{ docker_container_root_dir }}/prometheus"

prometheus_image_base: "prom/prometheus"
prometheus_image_base_tag: ""
# Ensures previous version of working
# prometheus image is available for failback
prometheus_image_base_tag_old: ""
prometheus_container_name: "prometheus"
prometheus_container_web_port: "9090"
# Controls whether docker-compose restarts Docker containers
prometheus_container_restart: no

prometheus_container_envs:
  kv:

prometheus_docker_cli_commands:
  "config.file": "/etc/prometheus/prometheus.yml"
  "web.config.file": "/etc/prometheus/web.yml"
  "web.console.libraries": "/usr/share/prometheus/console_libraries"
  "web.console.templates": "/usr/share/prometheus/consoles"
  "web.external-url": "https://prometheus.{{ home_lan_domain }}"


prometheus_global_scrape_interval: "1m"
prometheus_global_scrape_timeout: "10s"
prometheus_global_evaluation_interval: "1m"

# List of rule files
prometheus_rule_files:
  - ""

prometheus_scrape_configs:
  - job_name: "DEFAULT_JOB"
    static_configs:
      targets:
        - hosts:
            - hostname: ""
              port: ""
              # When true, Ansible controller will run dig and replace with IP
              do_dig_lookup: false
          labels:
    metrics_path: "/metrics"
    basic_auth:
      username: ""
      password: ""
    params:
    scrape_interval: ""
    scrape_timeout: ""
    relabel_configs:

prometheus_alerting_alertmanagers:
  - timeout: ""
    path_prefix: ""
    scheme: ""
    static_configs:
      targets:
        - hosts:
            - hostname: ""
              port: ""

prometheus_alerting_groups:
  - group_name: ""
    rules:
      - alert_name: ""
        expr: ""
        for: ""
        labels:
          severity: "critical"
        annotations:
          summary: ""
          description: ""
