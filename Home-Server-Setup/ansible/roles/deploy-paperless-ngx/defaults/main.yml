paperless_ngx_container_data_dir: "{{ docker_container_root_dir }}/paperless_ngx"

### Dependent containers

paperless_ngx_image_base: "paperlessngx/paperless-ngx"
paperless_ngx_image_base_tag: ""
# Ensures previous version of working
# paperless_ngx image is available for failback
paperless_ngx_image_base_tag_old: ""

paperless_ngx_postgres_image_base: "postgres"
paperless_ngx_postgres_image_base_tag: ""
# Ensures previous version of working
# immich image is available for failback
paperless_ngx_postgres_image_base_tag_old: ""

paperless_ngx_redis_image_base: "redis"
paperless_ngx_redis_image_base_tag: ""
# Ensures previous version of working
# immich image is available for failback
paperless_ngx_redis_image_base_tag_old: ""

paperless_ngx_container_name: "paperless_ngx"
paperless_ngx_postgres_container_name: "paperless_ngx_postgres"
paperless_ngx_redis_container_name: "paperless_ngx_redis"

# Controls whether docker-compose restarts Docker containers
paperless_ngx_container_restart: no

paperless_ngx_container_labels: []

#### Ports
paperless_ngx_port_web: "8000"

# UID and GID to run as in container
# Should match UID / GID of user ID on host system
paperless_ngx_uid: "1000"
paperless_ngx_gid: "1000"

# Postgres
paperless_ngx_postgres_user: "postgres_user"
paperless_ngx_postgres_password: "postgres_password"

paperless_ngx_container_traefik_labels:
  - "traefik.enable=true"
  - "traefik.docker.network={{ docker_networks.proxy.name }}"
  - "traefik.http.routers.paperless_ngx1.rule=Host(`paperless.{{ home_lan_domain }}`)"
  - "traefik.http.routers.paperless_ngx1.entrypoints=websecure"
  - "traefik.http.routers.paperless_ngx1.middlewares=lanWhitelist@file,secureHeaders@file"
  - "traefik.http.routers.paperless_ngx1.service=paperless_ngx1-svc"
  - "traefik.http.services.paperless_ngx1-svc.loadbalancer.server.port={{ paperless_ngx_port_web }}"
  - "traefik.http.routers.paperless_ngx1.tls=true"
  - "traefik.http.routers.paperless_ngx1.tls.certresolver=letsEncrypt"

paperless_ngx_backup_directory: "{{ paperless_ngx_container_data_dir }}/paperless_export"
paperless_ngx_nfs_backup_directory: "/nfs/Container-Data/docker/paperless_ngx/"
# Defines in days age of backups to remove
paperless_ngx_nfs_backup_cleanup_period: "35"
# Defines via cron syntax how often to run backup
paperless_ngx_nfs_backup_frequency: "0 1 * * 0"
paperless_ngx_nfs_backup_script_paperless_export_filename: "export-$(date +%F).zip"
paperless_ngx_nfs_backup_script_max_attempts: "10"
paperless_ngx_nfs_backup_script_backup_check_interval: "30"

paperless_ngx_container_envs:
  kv:
    USERMAP_UID: "{{ paperless_ngx_uid }}"
    USERMAP_GID: "{{ paperless_ngx_gid }}"
    PAPERLESS_PORT: "{{ paperless_ngx_port_web }}"
    PAPERLESS_TIME_ZONE: "Etc/UTC"
    PAPERLESS_OCR_LANGUAGE: "eng"
    PAPERLESS_OCR_OUTPUT_TYPE: "pdfa"
    PAPERLESS_OCR_ROTATE_PAGES: "true"
    PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD: "12"
    # Enables recursive processing on the consumption folder
    PAPERLESS_CONSUMER_RECURSIVE: "false"
    PAPERLESS_EMPTY_TRASH_DELAY: "30"
    PAPERLESS_REDIS: redis://{{ paperless_ngx_redis_container_name }}:6379
    PAPERLESS_DBHOST: "{{ paperless_ngx_postgres_container_name }}"
    PAPERLESS_DBNAME: "paperless_ngx"
    PAPERLESS_DBUSER: "{{ paperless_ngx_postgres_user }}"
    PAPERLESS_DBPASS: "{{ paperless_ngx_postgres_password }}"
    PAPERLESS_SECRET_KEY: "PLEASE_CHANGE_SECRET_KEY"
    # Set the following two for your first launch
    # and change the admin password afterwards.
    # Once setup, you can safely remove these variables.
    PAPERLESS_ADMIN_USER: "paperless_admin"
    PAPERLESS_ADMIN_PASSWORD: "paperless_password"

paperless_ngx_redis_container_envs:
  kv:
    REDIS_ARGS: "--save 60 10"

paperless_ngx_postgres_container_envs:
  kv:
    POSTGRES_USER: "{{ paperless_ngx_postgres_user }}"
    POSTGRES_DB: "paperless_ngx"
    POSTGRES_PASSWORD: "{{ paperless_ngx_postgres_password }}"

paperless_ngx_container_volumes:
  binds:
    - source: "./paperless_consume/"
      target: "/usr/src/paperless/consume/"
    - source: "./paperless_data/"
      target: "/usr/src/paperless/data/"
    - source: "./paperless_export/"
      target: "/usr/src/paperless/export/"
    - source: "./paperless_media/"
      target: "/usr/src/paperless/media/"

### Network mapping of paperless-ngx directories
# If mapping in network locations into paperless-ngx container
# toggle to true to add docker volume mappings to docker-compose file
paperless_ngx_use_network_directories: false

# Network locations where photos are located
paperless_ngx_network_volumes:
  # Location for paperless-ngx archived and original documents on network
  - name: "media"
    container_dest: "CONTAINER_LOCATION"
    driver: "local"
    driver_opts:
      type: "cifs"
      device: "//SERVER/SHARE"
      o: "addr=SERVER_FQDN,username=USER,password=PASSWORD,vers=3.0,uid=UID,gid=GID"
  # Location for paperless-ngx consumption folder on the network
  - name: "consume"
    container_dest: "CONTAINER_LOCATION"
    driver: "local"
    driver_opts:
      type: "cifs"
      device: "//SERVER/SHARE"
      o: "addr=SERVER_FQDN,username=USER,password=PASSWORD,vers=3.0,uid=UID,gid=GID"
