---

# {{ ansible_managed }}

version: "3"

services:
  zwave_js_ui:
    container_name: "{{ zwave_js_ui_container_name }}"
    image: "{{ zwave_js_ui_image_base }}:{{ zwave_js_ui_image_base_tag }}"
    env_file: zwave_js_ui.env
    stop_signal: SIGINT
    ports:
      - "{{ zwave_js_ui_websocket_server_port }}:{{ zwave_js_ui_websocket_server_port }}"
    networks:
      - {{ docker_networks.proxy.name }}
    # Volumes store your data between container upgrades
    volumes:
{% for volume in zwave_js_ui_container_volumes.binds %}
      - {{ volume.source }}:{{ volume.target }}
{% endfor %}
    devices: []
      # - /dev/serial/by-id/{{ zwave_js_ui_host_usb_device_id }}:{{ zwave_js_ui_container_usb_device_id }}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ docker_networks.proxy.name }}"
      - "traefik.http.routers.zwave_js_ui1.rule=Host(`zwave.{{ home_lan_domain }}`)"
      - "traefik.http.routers.zwave_js_ui1.entrypoints=websecure"
      - "traefik.http.routers.zwave_js_ui1.middlewares=secureHeaders@file"
      - "traefik.http.routers.zwave_js_ui1.tls=true"
      - "traefik.http.routers.zwave_js_ui1.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.zwave_js_ui1.service=zwave_js_ui-svc"
      - "traefik.http.services.zwave_js_ui-svc.loadbalancer.server.port={{ zwave_js_ui_web_port }}"
    restart: "always"
networks:
  {{ docker_networks.proxy.name }}:
    external: true