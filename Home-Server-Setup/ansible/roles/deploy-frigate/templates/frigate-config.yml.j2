---
# {{ ansible_managed }}
mqtt:
  enabled: {{ frigate_mqtt_enabled }}
  host: '{{ frigate_mqtt_host }}'
  port: {{ frigate_mqtt_port }}
  topic_prefix: {{ frigate_mqtt_topic_prefix }}
  client_id: {{ frigate_mqtt_client_id }}
  user: '{{ frigate_mqtt_user }}'
  password: '{{ frigate_mqtt_password }}'
  # tls_ca_certs must be defined even if LetsEncrypt used
  # Without, error is thrown and won't connect
  # https://github.com/blakeblackshear/frigate/issues/2471
  # Set to default cert path in Ubuntu
  # tls_ca_certs: {{ frigate_mqtt_tls_ca_certs }}
  # tls_insecure: {{ frigate_mqtt_tls_insecure }}
  stats_interval: {{ frigate_mqtt_stats_interval }}

auth:
  {{ frigate_auth }}

detectors:
{% for detector_name, detector_config in frigate_detectors.items() %}
  {{ detector_name }}:
    {{ detector_config }}
{% endfor %}

database:
  {{ frigate_database }}

audio:
  {{ frigate_audio }}

go2rtc:
  streams:
{% for go2rtc_stream_name, go2rtc_stream_configs in frigate_go2rtc.streams.items() %}
    {{ go2rtc_stream_name }}:
{% for gortc_stream_config in go2rtc_stream_configs %}
      - {{ gortc_stream_config }}
{% endfor %}
{% endfor %}
  webrtc:
    candidates:
{% for webrtc_candidate in frigate_go2rtc.webrtc.candidates %}
      - {{ webrtc_candidate }}
{% endfor %}

cameras:
{% for camera_name, camera_config in frigate_cameras.items() %}
  {{ camera_name }}:
    {{ camera_config }}
{% endfor %}

birdseye:
  {{ frigate_birdseye }}

model:
  {{ frigate_detectors_model }}

ffmpeg:
  {{ frigate_ffmpeg }}

detect:
  {{ frigate_detect }}

record:
  {{ frigate_record }}

snapshots:
  {{ frigate_snapshots }}

timestamp_style:
  {{ frigate_timestamp_style }}

live:
  {{ frigate_live }}

ui:
  {{ frigate_ui }}

semantic_search:
  {{ frigate_semantic_search }}

logger:
  {{ frigate_logger }}