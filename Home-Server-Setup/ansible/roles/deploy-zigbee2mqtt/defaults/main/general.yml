zigbee2mqtt_container_data_dir: "{{ docker_container_root_dir }}/zigbee2mqtt"

zigbee2mqtt_image_base: "koenkk/zigbee2mqtt"
zigbee2mqtt_image_base_tag: ""
# Ensures previous version of working
# zigbee2mqtt image is available for failback
zigbee2mqtt_image_base_tag_old: ""
zigbee2mqtt_container_name: "zigbee2mqtt"
# Controls whether docker-compose restarts Docker containers
zigbee2mqtt_container_restart: no
# Defines image ID for custom image
zigbee2mqtt_image_custom: "{{ ansible_user }}/zigbee2mqtt"
zigbee2mqtt_container_user_id: "1000"
# Group with access to the adapter
zigbee2mqtt_container_user_group: "dialout"
# Locate path for Zigbee adapter and define as hostvar
zigbee2mqtt_zigbee_host_usb_device_id: ""
# Defines device to map to in container
zigbee2mqtt_zigbee_container_usb_device_id: "/dev/ttyACM0"

zigbee2mqtt_container_traefik_labels:
  - "traefik.enable=true"
  - "traefik.docker.network={{ docker_networks.proxy.name }}"
  - "traefik.http.routers.zigbee2mqtt1.rule=Host(`zigbee2mqtt.{{ home_lan_domain }}`)"
  - "traefik.http.routers.zigbee2mqtt1.entrypoints=websecure"
  - "traefik.http.routers.zigbee2mqtt1.middlewares=secureHeaders@file"
  - "traefik.http.routers.zigbee2mqtt1.tls=true"
  - "traefik.http.routers.zigbee2mqtt1.tls.certresolver=letsEncrypt"
  - "traefik.http.routers.zigbee2mqtt1.service=zigbee2mqtt-svc"
  - "traefik.http.services.zigbee2mqtt-svc.loadbalancer.server.port=8080"

zigbee2mqtt_container_envs:
  kv:
    TZ: "America/Vancouver"
