jellyfin_container_data_dir: "{{ docker_container_root_dir }}/jellyfin"

jellyfin_image_base: "jellyfin/jellyfin"
jellyfin_image_base_tag: ""
# Ensures previous version of working
# jellyfin image is available for failback
jellyfin_image_base_tag_old: ""
jellyfin_container_name: "jellyfin"
# Controls whether docker-compose restarts Docker containers
jellyfin_container_restart: no
# Defines image ID for custom image
jellyfin_image_custom: "{{ ansible_user }}/jellyfin"
jellyfin_container_uid: 1000

jellyfin_container_labels: []

jellyfin_container_traefik_labels:
  - "traefik.enable=true"
  - "traefik.docker.network={{ docker_networks.proxy.name }}"
  - "traefik.http.routers.jellyfin1.rule=Host(`jellyfin.{{ home_lan_domain }}`)"
  - "traefik.http.routers.jellyfin1.entrypoints=websecure"
  - "traefik.http.routers.jellyfin1.middlewares=lanWhitelist@file,secureHeaders@file"
  - "traefik.http.routers.jellyfin1.tls=true"
  - "traefik.http.routers.jellyfin1.tls.certresolver=letsEncrypt"

# Defines where in container media is located
jellyfin_remote_media_location: "/mnt"

jellyfin_media_volumes:
  []
  # - name: "VOLUME_NAME"
  #   type: volume
  #   container_dest: "{{ jellyfin_remote_media_location }}/PATH"
  #   driver: "local"
  #   driver_opts:
  #     type: "cifs"
  #     device: "//SERVER/SHARE"
  #     o: "addr=SERVER_FQDN,username=USER,password=PASSWORD,vers=3.0,uid=UID,gid=GID"
  #   read_only: "true"

jellyfin_container_envs:
  kv:
