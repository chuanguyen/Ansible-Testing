immich_container_data_dir: "{{ docker_container_root_dir }}/immich"

immich_repo_base: "ghcr.io/immich-app"
immich_image_base_tag: ""
# Ensures previous version of working
# immich image is available for failback
immich_image_base_tag_old: ""

### Dependent containers

immich_redis_image_base: "docker.io/valkey/valkey"
immich_redis_image_base_tag: ""
# Ensures previous version of working
# immich image is available for failback
immich_redis_image_base_tag_old: ""

immich_postgres_image_base: "tensorchord/pgvecto-rs"
immich_postgres_image_base_tag: ""
# Ensures previous version of working
# immich image is available for failback
immich_postgres_image_base_tag_old: ""

# Container details
immich_server_image_base: "{{ immich_repo_base }}/immich-server"
immich_microservices_server_image_base: "{{ immich_repo_base }}/immich-server"
immich_machine_learning_image_base: "{{ immich_repo_base }}/immich-machine-learning"
immich_web_image_base: "{{ immich_repo_base }}/immich-web"
immich_proxy_image_base: "{{ immich_repo_base }}/immich-proxy"

immich_server_container_name: "immich_server"
immich_microservices_container_name: "immich_microservices"
immich_machine_learning_container_name: "immich_machine_learning"
immich_web_container_name: "immich_web"
immich_proxy_container_name: "immich_proxy"
immich_redis_container_name: "immich_redis"
immich_postgres_container_name: "immich_postgres"

# Controls whether docker-compose restarts Docker containers
immich_container_restart: no
# Defines image ID for custom image
immich_image_custom: "{{ ansible_user }}/immich"

immich_proxy_container_traefik_labels:
  - "traefik.enable=true"
  - "traefik.docker.network={{ docker_networks.proxy.name }}"
  - "traefik.http.routers.immich1.rule=Host(`immich.{{ home_lan_domain }}`)"
  - "traefik.http.routers.immich1.entrypoints=websecure"
  - "traefik.http.routers.immich1.middlewares=secureHeaders@file"
  - "traefik.http.routers.immich1.service=immich-svc"
  - "traefik.http.services.immich-svc.loadbalancer.server.port=2283"
  - "traefik.http.routers.immich1.tls=true"
  - "traefik.http.routers.immich1.tls.certresolver=letsEncrypt"

# Defines upload location on host
immich_upload_location: "{{ immich_container_data_dir }}/Photos/Uploads"

immich_web_url: "http://immich-web:3000"
immich_server_url: "http://immich-server:3001"

immich_typesense_api_key: "test_test_test"

immich_db_hostname: "{{ immich_postgres_container_name }}"
immich_db_username: "postgres"
immich_db_password: "postgres"
immich_db_database_name: "immich"

immich_container_envs:
  kv:
    DB_HOSTNAME: "{{ immich_db_hostname }}"
    DB_USERNAME: "{{ immich_db_username }}"
    DB_PASSWORD: "{{ immich_db_password }}"
    DB_DATABASE_NAME: "{{ immich_db_database_name }}"
    REDIS_HOSTNAME: "{{ immich_redis_container_name }}"
    UPLOAD_LOCATION: "{{ immich_upload_location }}"
    TYPESENSE_API_KEY: "{{ immich_typesense_api_key }}"
    PUBLIC_LOGIN_PAGE_MESSAGE: ""
    IMMICH_WEB_URL: "{{ immich_web_url }}"
    IMMICH_SERVER_URL: "{{ immich_server_url }}"
    IMMICH_MACHINE_LEARNING_URL: "http://immich-machine-learning:3003"
