---

# {{ ansible_managed }}

version: "3.8"

services:
  immich-server:
    container_name: {{ immich_server_container_name }}
    image: {{ immich_server_image_base }}:{{ immich_image_base_tag }}
    networks:
      - immich
    command: ["start.sh", "immich"]
    # Volumes store your data between container upgrades
    volumes:
{% for volume in immich_container_volumes.binds %}
      - {{ volume.source }}:{{ volume.target }}
{% endfor %}
    env_file:
      - immich.env
    depends_on:
      - redis
      - database
      - typesense
    restart: always

  immich-microservices:
    container_name: {{ immich_microservices_container_name }}
    image: {{ immich_microservices_server_image_base }}:{{ immich_image_base_tag }}
    networks:
      - immich
    command: ["start.sh", "microservices"]
    # Volumes store your data between container upgrades
    volumes:
{% for volume in immich_container_volumes.binds %}
      - {{ volume.source }}:{{ volume.target }}
{% endfor %}
    env_file:
      - immich.env
    depends_on:
      - redis
      - database
      - typesense
    restart: always

  immich-machine-learning:
    container_name: {{ immich_machine_learning_container_name }}
    image: {{ immich_machine_learning_image_base }}:{{ immich_image_base_tag }}
    networks:
      - {{ docker_networks.proxy.name }}
      - immich
    volumes:
      - model-cache:/cache
    env_file:
      - immich.env
    restart: always

  immich-web:
    container_name: {{ immich_web_container_name }}
    image: {{ immich_web_image_base }}:{{ immich_image_base_tag }}
    networks:
      - immich
    env_file:
      - immich.env
    restart: always

  typesense:
    container_name: {{ immich_typesense_container_name }}
    image: {{ immich_typesense_image_base }}:{{ immich_typesense_image_base_tag }}
    networks:
      - immich
    environment:
      - TYPESENSE_API_KEY={{ immich_typesense_api_key }}
      - TYPESENSE_DATA_DIR=/data
    logging:
      driver: none
    volumes:
      - tsdata:/data
    restart: always

  redis:
    container_name: {{ immich_redis_container_name }}
    image: {{ immich_redis_image_base }}:{{ immich_redis_image_base_tag }}
    networks:
      - immich
    restart: always

  database:
    container_name: {{ immich_postgres_container_name }}
    image: {{ immich_postgres_image_base }}:{{ immich_postgres_image_base_tag }}
    networks:
      - immich
    env_file:
      - immich.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  immich-proxy:
    container_name: {{ immich_proxy_container_name }}
    image: {{ immich_proxy_image_base }}:{{ immich_image_base_tag }}
    networks:
      - immich
      - {{ docker_networks.proxy.name }}
    env_file:
      - immich.env
    ports:
      - 2283:8080
    depends_on:
      - immich-server
      - immich-web
    restart: always

networks:
  {{ docker_networks.proxy.name }}:
    external: true
  immich:
    external: false
volumes:
  pgdata:
  model-cache:
  tsdata:
