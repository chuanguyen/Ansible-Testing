---
### {{ ansible_managed }}

global:
  # The default SMTP From header field.
  # [ smtp_from: <tmpl_string> ]
{% if (alertmanager_global_smtp_from is defined) and (alertmanager_global_smtp_from != "") %}
  smtp_from: "{{ alertmanager_global_smtp_from }}"
{% endif %}
  # The default SMTP smarthost used for sending emails, including port number.
  # Port number usually is 25, or 587 for SMTP over TLS (sometimes referred to as STARTTLS).
  # Example: smtp.example.org:587
  # [ smtp_smarthost: <string> ]
{% if (alertmanager_global_smtp_smarthost is defined) and (alertmanager_global_smtp_smarthost != "") %}
  smtp_smarthost: "{{ alertmanager_global_smtp_smarthost }}"
{% endif %}
  # The default hostname to identify to the SMTP server.
  # [ smtp_hello: <string> | default = "localhost" ]
{% if (alertmanager_global_smtp_hello is defined) and (alertmanager_global_smtp_hello != "") %}
  smtp_hello: "{{ alertmanager_global_smtp_hello }}"
{% endif %}
  # SMTP Auth using CRAM-MD5, LOGIN and PLAIN. If empty, Alertmanager doesn't authenticate to the SMTP server.
  # [ smtp_auth_username: <string> ]
{% if (alertmanager_global_smtp_auth_username is defined) and (alertmanager_global_smtp_auth_username != "") %}
  smtp_auth_username: "{{ alertmanager_global_smtp_auth_username }}"
{% endif %}
  # SMTP Auth using LOGIN and PLAIN.
  # [ smtp_auth_password: <secret> ]
{% if (alertmanager_global_smtp_auth_password is defined) and (alertmanager_global_smtp_auth_password != "") %}
  smtp_auth_password: "{{ alertmanager_global_smtp_auth_password }}"
{% endif %}
  # SMTP Auth using PLAIN.
  # [ smtp_auth_identity: <string> ]
{% if (alertmanager_global_smtp_auth_identity is defined) and (alertmanager_global_smtp_auth_identity != "") %}
  smtp_auth_identity: "{{ alertmanager_global_smtp_auth_identity }}"
{% endif %}
  # SMTP Auth using CRAM-MD5.
  # [ smtp_auth_secret: <secret> ]
{% if (alertmanager_global_smtp_auth_secret is defined) and (alertmanager_global_smtp_auth_secret != "") %}
  smtp_auth_secret: "{{ alertmanager_global_smtp_auth_secret }}"
{% endif %}
  # The default SMTP TLS requirement.
  # Note that Go does not support unencrypted connections to remote SMTP endpoints.
  # [ smtp_require_tls: <bool> | default = true ]
{% if (alertmanager_global_smtp_require_tls is defined) and (alertmanager_global_smtp_require_tls != "") %}
  smtp_require_tls: {{ alertmanager_global_smtp_require_tls }}
{% endif %}

  # ResolveTimeout is the default value used by alertmanager if the alert does
  # not include EndsAt, after this time passes it can declare the alert as resolved if it has not been updated.
  # This has no impact on alerts from Prometheus, as they always include EndsAt.
  # [ resolve_timeout: <duration> | default = 5m ]
  resolve_timeout: {{ alertmanager_global_resolve_timeout }}

route:
  receiver: '{{ alertmanager_route_default_receiver }}'
  group_wait: {{ alertmanager_route_default_group_wait }}
  group_interval: {{ alertmanager_route_default_group_interval }}
  repeat_interval: {{ alertmanager_route_default_repeat_interval }}
{% if alertmanager_route_default_group_by is defined and alertmanager_route_default_group_by[0] != "" %}
  group_by:
{% for route_group_by in alertmanager_route_default_group_by %}
    - "{{ route_group_by }}"
{% endfor %}
{% endif %}
{% if alertmanager_route_receivers[0].name != "" %}
  routes:
{% for receiver_config in alertmanager_route_receivers %}
    - receiver: "{{ receiver_config.name }}"
{% if receiver_config.group_wait is defined %}
      group_wait: {{ receiver_config.group_wait }}
{% endif %}
{% if receiver_config.group_interval is defined %}
      group_interval: {{ receiver_config.group_interval }}
{% endif %}
{% if receiver_config.repeat_interval is defined %}
      repeat_interval: {{ receiver_config.repeat_interval }}
{% endif %}
{% if receiver_config.group_by is defined and receiver_config.group_by[0] != "" %}
      group_by:
{% for receiver_group_by in receiver_config.group_by %}
        - {{ receiver_group_by }}
{% endfor %}
{% endif %}
      matchers:
{% for receiver_matcher in receiver_config.matchers %}
{% for matcher_label, matcher_value in receiver_matcher.items()%}
        - {{ matcher_label }}="{{ matcher_value }}"
{% endfor %}
{% endfor %}
{% endfor %}
{% endif %}

{% if alertmanager_templates is defined and alertmanager_templates[0] != "" %}
templates:
{% for alertmanager_template in alertmanager_templates %}
  - {{ alertmanager_template }}
{% endfor %}
{% endif %}

{% if alertmanager_receivers is defined and alertmanager_receivers[0].name != "" %}
receivers:
{% for alertmanager_receiver in alertmanager_receivers %}
  - name: {{ alertmanager_receiver.name }}
{% if alertmanager_receiver.email_configs is defined %}
    email_configs:
      -
{% for email_config_key,email_config_value in alertmanager_receiver.email_configs.items() %}
{% if email_config_value != "" %}
        {{ email_config_key }}: {{ email_config_value }}
{% endif %}
{% endfor %}
{% endif %}
{% if alertmanager_receiver.discord_configs[0] != "" %}
    discord_configs:
{% for discord_webhook_url in alertmanager_receiver.discord_configs %}
      - webhook_url: {{ discord_webhook_url }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

{% if alertmanager_inhibit_rules is defined and alertmanager_inhibit_rules[0] != "" %}
inhibit_rules:
{% for alertmanager_inhibit_rule in alertmanager_inhibit_rules %}
  - {{ alertmanager_inhibit_rule }}
{% endfor %}
{% endif %}

{% if alertmanager_mute_time_intervals is defined and alertmanager_mute_time_intervals[0] != "" %}
mute_time_intervals:
{% for alertmanager_mute_time_interval in alertmanager_mute_time_intervals %}
  - {{ alertmanager_mute_time_interval }}
{% endfor %}
{% endif %}
